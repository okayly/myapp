<!DOCTYPE html>
<html>
<head>
	<title><%= title %></title>
	<link rel='stylesheet' href='/stylesheets/style.css' />
	<script src="http://code.jquery.com/jquery-latest.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.4/socket.io.js"></script>	

	<script type="text/javascript">
		var socket = undefined;

		function Reqlog(p_cmd, p_packet) {
			console.log(p_cmd, JSON.stringify(p_packet));
		}

		function Acklog(p_packet) {
			console.log('Ack -', p_packet);
		}

		function CheckAccount() {
			var account = $('#ReqDuckAccount > #account').val();
			if ( account == 0 || account == NaN || account == '' ) {
				alert('계정 입력');
				$('#ReqDuckAccount > #account').focus();
				return false;
			}
			return true;
		}

		function Connect(p_type, p_port) {
			if (typeof socket != 'undefined')
				socket.disconnect();
			
			console.log('type : %s, port : %d', p_type, p_port);
			let ip = 'http://13.125.171.231:';

			if ( p_type == 'OUT' )
				ip = 'http://52.78.25.165:';
			
			socket = io.connect(ip + p_port, { 'forceNew': true });

			socket.on('connect', 			function() { console.log('connected server...'); });
			socket.on('disconnect', 		function(recv) { console.log('disconnect server...', recv); });
			socket.on('RecvError', 			function(recv) { console.log(recv); });
			socket.on('evt_notice', 		function(recv) { console.log(recv); });
			socket.on('AckDuckServerMsg', 	function(recv) { Acklog(recv); });

			// recv - duck
			socket.on('AckDuckAccount',			function(recv) { Acklog(recv); });
			socket.on('AckDuckAccountLevel',	function(recv) { Acklog(recv); });
			socket.on('AckDuckAccountBuff',		function(recv) { Acklog(recv); });
			socket.on('AckDuckVip',				function(recv) { Acklog(recv); });
			socket.on('AckDuckCash',			function(recv) { Acklog(recv); });
			socket.on('AckDuckGold',			function(recv) { Acklog(recv); });
			socket.on('AckDuckHonorPoint',		function(recv) { Acklog(recv); });
			socket.on('AckDuckAlliancePoint',	function(recv) { Acklog(recv); });
			socket.on('AckDuckChallengePoint',	function(recv) { Acklog(recv); });
			socket.on('AckDuckStamina',			function(recv) { Acklog(recv); });
			socket.on('AckDuckSkillPoint',		function(recv) { Acklog(recv); });
			socket.on('AckDuckGuildPoint',		function(recv) { Acklog(recv); });
			socket.on('AckDuckDailyContents',	function(recv) { Acklog(recv); });
		}

		function Disconnect() {
			if ( typeof socket != 'undefined' )
				socket.disconnect();
		}

		// send
		$(document).ready(function() {
			// Design 서버에 로그인
			Connect('IN', 2542);

			// let options = $('#ReqDuckAccountLevel > #account_level').attr('options');
			// console.log('options', options);
			// options[options.length] = new Option('1', 1);

			for ( let cnt = 1; cnt <= 50; ++cnt ) {
				$('#ReqDuckAccountLevel > #account_level').append(new Option(cnt, cnt));
			}
			
			//------------------------------------------------------------------------------------------------------------------
			$('#ConnectServer > #connect').click(function() {
				var server_type = $('#Server > #server_type').val();
				var server_port = $('#ConnectServer > #server_port').val();

				Connect(server_type, server_port);
			});

			//------------------------------------------------------------------------------------------------------------------
			$('#ConnectServer > #disconnect').click(function() {
				Disconnect();
			});

			//------------------------------------------------------------------------------------------------------------------
			$('#ReqDuckServerMsg > #Send').click(function() {				
				SendPacket('ReqDuckServerMsg', $('#ReqDuckServerMsg > #msg'), $('#ReqDuckServerMsg > #pass'));
			});

			//------------------------------------------------------------------------------------------------------------------
			$('#ReqDuckAccount > #Send').click(function() {
				var packet = function() {
					this.account;
				};

				var send = new packet();
				send.account = $('#ReqDuckAccount > #account').val();
				Reqlog('ReqDuckAccount', send);

				socket.emit('ReqDuckAccount', JSON.stringify(send));
			});

			//------------------------------------------------------------------------------------------------------------------
			$('#ReqDuckAccountLevel > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckAccountLevel', $('#ReqDuckAccount > #account'), $('#ReqDuckAccountLevel > #account_level'));
			});

			$('#ReqDuckAccountBuff > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckAccountBuff', $('#ReqDuckAccount > #account'), $('#ReqDuckAccountBuff > #account_buff_level'));
			});

			$('#ReqDuckVip > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckVip', $('#ReqDuckAccount > #account'), $('#ReqDuckVip > #accum_cash'));
			});

			$('#ReqDuckCash > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckCash', $('#ReqDuckAccount > #account'), $('#ReqDuckCash > #cash'));
			});

			$('#ReqDuckGold > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckGold', $('#ReqDuckAccount > #account'), $('#ReqDuckGold > #gold'));
			});

			$('#ReqDuckHonorPoint > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckHonorPoint', $('#ReqDuckAccount > #account'), $('#ReqDuckHonorPoint > #honor_point'));
			});

			$('#ReqDuckAlliancePoint > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckAlliancePoint', $('#ReqDuckAccount > #account'), $('#ReqDuckAlliancePoint > #alliance_point'));
			});

			$('#ReqDuckChallengePoint > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckChallengePoint', $('#ReqDuckAccount > #account'), $('#ReqDuckChallengePoint > #challenge_point'));
			});

			$('#ReqDuckStamina > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckStamina', $('#ReqDuckAccount > #account'), $('#ReqDuckStamina > #stamina'));
			});

			$('#ReqDuckSkillPoint > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckSkillPoint', $('#ReqDuckAccount > #account'), $('#ReqDuckSkillPoint > #skill_point'));
			});

			$('#ReqDuckGuildPoint > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckGuildPoint', $('#ReqDuckAccount > #account'), $('#ReqDuckGuildPoint > #guild_point'));
			});

			$('#ReqDuckDailyContents > #Send').click(function() {
				if ( CheckAccount() == false )
					return;

				SendPacket('ReqDuckDailyContents', $('#ReqDuckAccount > #account'));
			});
		});

		function SendPacket(p_cmd) {
			// console.log('arguments', arguments);
			var packet = new Object();
			for (var cnt = 1; cnt < arguments.length; ++cnt) {
				packet[arguments[cnt].attr('id')] = arguments[cnt].val();
			}

			Reqlog(p_cmd, packet);
			socket.emit(p_cmd, JSON.stringify(packet));
		}
	</script>

	<script type="text/javascript">
	</script>
</head>
	<body>
		<h1><%= title %></h1>
		<h1>
			<a href="/account">ACCOUNT</a>
			<a href="/hero">HERO</a>
			<a href="/item">ITEM</a>
			<a href="/stage">STAGE</a>
			<a href="/mail">MAIL</a>
			<a href="/command">+</a>
		</h1>
		<div id="Server">
			ServerType: <select id="server_type">
				<option value="IN">내부 서버</option>
				<option value="OUT">외부 서버</option>
			</select>
			<input type="button" id="type" value="Type"/>
		</div>
		<div id="ConnectServer">
			ServerPort: <select id="server_port">
				<option value="2542">AWS</option>
			</select>
			<input type="button" id="connect" value="Connect"/>
			<input type="button" id="disconnect" value="Diconnect"/>
		</div>
		<div id="ReqDuckServerMsg">
			할말 <select id="msg">
				<option value="서버 재시작 합니다.">서버 재시작 합니다.</option>
			</select>
			<select id="pass">
				<option value="true">true</option>
			</select>
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckAccount">
			계정확인 <input type="text" id="account" size="10" placeholder="ACCOUNT" value='1' />
			<input type="button" id="Send" value="Confirm" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckAccountLevel">
			계정 레벨 <select id="account_level" ></select>
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckAccountBuff">
			계정 버프 레벨 <select id="account_buff_level">
				<option value="1">1</option>
				<option value="2">2</option>
				<option value="3">3</option>
				<option value="4">4</option>
				<option value="5">5</option>
				<option value="6">6</option>
				<option value="7">7</option>
				<option value="8">8</option>
				<option value="9">9</option>
				<option value="10">10</option>
			</select>
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckVip">
			VIP 경험치 <input type="text" id="accum_cash" size="10" placeholder="accum_cash" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckCash">
			캐쉬 <input type="text" id="cash" size="10" placeholder="cash" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckGold">
			골드 <input type="text" id="gold" size="10" placeholder="gold" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckHonorPoint">
			명예포인트 <input type="text" id="honor_point" size="10" placeholder="honor_point" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckAlliancePoint">
			동맹포인트 <input type="text" id="alliance_point" size="10" placeholder="alliance_point" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckChallengePoint">
			도전포인트 <input type="text" id="challenge_point" size="10" placeholder="challenge_point" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckStamina">
			스테미너 <input type="text" id="stamina" size="10" placeholder="stamina" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckSkillPoint">
			스킬포인트 <input type="text" id="skill_point" size="10" placeholder="skill_point" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckGuildPoint">
			길드포인트 <input type="text" id="guild_point" size="10" placeholder="guild_point" />
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
		<br/>
		<div id="ReqDuckDailyContents">
			일일 쿨타임 리셋
			<input type="button" id="Send" value="Send" /><div id="output"></div>
		</div>
	</body>
</html>